name: test and deploy application
on: [push, pull_request]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  MARIADB_ROOT_PASSWORD: ${{  secrets.MARIADB_ROOT_PASSWORD }}
  MARIADB_USER_DATABASE: ${{  secrets.MARIADB_USER_DATABASE }}
  MARIADB_CALENDAR_DATABASE: ${{  secrets.MARIADB_CALENDAR_DATABASE }}
  MARIADB_USER: ${{  secrets.MARIADB_USER }}
  MARIADB_PASSWORD: ${{ secrets.MARIADB_USER }}

jobs:
  check-trigger-event:
    runs-on: ubuntu-latest
    outputs: 
      TAG: ${{ steps.check.outputs.TAG }}
    steps:
      - name: check push or pr
        id: check
        run: |
          if [ "${{ github.event_name }}" == "push" ]; then
          echo "TAG=$GITHUB_SHA" >> $GITHUB_OUTPUT
          else
          echo "TAG=latest" >> $GITHUB_OUTPUT
          fi

  test-calendar-ms:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: prepare runner
        run: |
          sudo apt-get update 
          sudo apt-get install docker-compose
      - name: test calendar-ms
        run: docker-compose -f compose.test.yaml -f compose.yaml up calendar-ms-test

  test-user-ms:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: prepare runner
        run: |
          sudo apt-get update 
          sudo apt-get install docker-compose
      - name: test user-ms
        run: docker-compose -f compose.test.yaml -f compose.yaml up user-ms-test

  build-and-push-app:
    runs-on: ubuntu-latest
    needs: [test-calendar-ms, test-user-ms, check-trigger-event]
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - uses: actions/checkout@v4
      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/app
          tags: |
            type=raw,value=${{ needs.check-trigger-event.outputs.TAG }}
      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          target: prod
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/app
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true

  build-and-push-user:
    runs-on: ubuntu-latest
    needs: [test-user-ms, check-trigger-event]
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - uses: actions/checkout@v4
      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/user
          tags: |
            type=raw,value=${{ needs.check-trigger-event.outputs.TAG }}
      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: Website/user_microservice/
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          target: prod
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}/user
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true

  build-and-push-calendar:
    runs-on: ubuntu-latest
    needs: [test-calendar-ms, check-trigger-event]
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - uses: actions/checkout@v4
      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/calendar
          tags: |
            type=raw,value=${{ needs.check-trigger-event.outputs.TAG }}
      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: Website/calendar_microservice/
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          target: prod
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}/calendar
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
